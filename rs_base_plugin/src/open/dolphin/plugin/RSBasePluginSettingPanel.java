/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PluginSettingPanel.java
 *
 * Created on 2010/09/27, 12:36:23
 */

package open.dolphin.plugin;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JPanel;

import open.dolphin.client.settings.IAbstractSettingPanel;
import open.dolphin.client.settings.ProjectSettingDialog;
import open.dolphin.utils.Adapter;
import open.dolphin.project.GlobalVariables;

/**
 *
 * @author
 */
public class RSBasePluginSettingPanel extends javax.swing.JPanel implements IAbstractSettingPanel {

    private ProjectSettingDialog context;
    private PropertyChangeSupport boundSupport;
    /**
     *
     */
    protected State state = State.NONE_STATE;
    private boolean loginState;
    private String title;
    private String icon;
    private String id;
    private open.dolphin.plugin.IPlugin parent;
    private String address; //RS_Baseが動作しているPCのIPアドレス
    private String folder; //RS_Baseが動作しているPCの共有フォルダ
    private String username; //共有フォルダにアクセスできるユーザ名
    private String password; //上記ユーザのパスワード

   private Adapter<Boolean, Boolean> adapter;

   /** Creates new form PluginSettingPanel
    * @param parent
    */
    public RSBasePluginSettingPanel(open.dolphin.plugin.IPlugin parent) {
        this.parent = parent;
        boundSupport = new PropertyChangeSupport(this);
        initComponents();
        
        setId("RsBasePlugin");
        setTitle("RSBaseプラグイン");
        setIcon("web_24.gif");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addressField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chkAcsCtrl = new javax.swing.JCheckBox();
        txtFolder = new javax.swing.JTextField();
        lblFileOutput = new javax.swing.JLabel();
        chkShoken = new javax.swing.JCheckBox();
        panelAuth = new javax.swing.JPanel();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();

        addressField.setName("addressField"); // NOI18N

        jLabel1.setText("RS_Baseが動作しているマシンのアドレス");
        jLabel1.setName("jLabel1"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("RS_Base へのファイル出力"));
        jPanel1.setName("jPanel1"); // NOI18N

        chkAcsCtrl.setText("共有フォルダにアクセス制限がある場合");
        chkAcsCtrl.setName("chkAcsCtrl"); // NOI18N
        chkAcsCtrl.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkAcsCtrlStateChanged(evt);
            }
        });

        txtFolder.setName("txtFolder"); // NOI18N

        lblFileOutput.setText("RS_Base 側の共有名（ファイルの出力先）");
        lblFileOutput.setName("lblFileOutput"); // NOI18N

        chkShoken.setText("電子カルテの所見をRS_Base に出力する");
        chkShoken.setName("chkShoken"); // NOI18N

        panelAuth.setBorder(javax.swing.BorderFactory.createTitledBorder("Windows でのユーザ認証情報"));
        panelAuth.setName("panelAuth"); // NOI18N

        lblUserName.setText("ユーザ名");
        lblUserName.setName("lblUserName"); // NOI18N

        txtUserName.setName("txtUserName"); // NOI18N

        lblPassword.setText("パスワード");
        lblPassword.setName("lblPassword"); // NOI18N

        txtPassword.setName("txtPassword"); // NOI18N

        javax.swing.GroupLayout panelAuthLayout = new javax.swing.GroupLayout(panelAuth);
        panelAuth.setLayout(panelAuthLayout);
        panelAuthLayout.setHorizontalGroup(
            panelAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAuthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAuthLayout.setVerticalGroup(
            panelAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAuthLayout.createSequentialGroup()
                .addGroup(panelAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName)
                    .addGroup(panelAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPassword)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkShoken)
                            .addComponent(lblFileOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190))
                    .addComponent(chkAcsCtrl)
                    .addComponent(panelAuth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(chkShoken)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFileOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkAcsCtrl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAuth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(61, 61, 61)
                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chkAcsCtrlStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkAcsCtrlStateChanged
        // TODO add your handling code here:
        if (this.chkAcsCtrl.isSelected()) {
            this.txtUserName.setEnabled(true);
            this.txtPassword.setEnabled(true);
        } else {
            this.txtUserName.setEnabled(false);
            this.txtPassword.setEnabled(false);
        }
    }//GEN-LAST:event_chkAcsCtrlStateChanged

    /**
     *
     * @return
     */
    @Override
    public String getId() {
        return id;
    }

    /**
     *
     * @param id
     */
    @Override
    public void setId(String id) {
        this.id = id;
    }

    /**
     *
     * @return
     */
    @Override
    public String getTitle() {
        return title;
    }

    /**
     *
     * @param title
     */
    @Override
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     *
     * @return
     */
    @Override
    public String getIcon() {
        return icon;
    }

    /**
     *
     * @param icon
     */
    @Override
    public void setIcon(String icon) {
        this.icon = icon;
    }

    /**
     *
     * @return
     */
    @Override
    public ProjectSettingDialog getContext() {
        return context;
    }

    /**
     *
     * @param context
     */
    @Override
    public void setContext(ProjectSettingDialog context) {
        this.context = context;
        this.addPropertyChangeListener(STATE_PROP, context);
        this.setLogInState(context.getLoginState());
    }

    /**
     *
     * @return
     */
    @Override
    public boolean isLoginState() {
        return loginState;
    }

    /**
     *
     * @param login
     */
    @Override
    public void setLogInState(boolean login) {
        loginState = login;
    }

    /**
     *
     * @return
     */
    @Override
    public JPanel getPanel() {
        return this;
    }

    /**
     * 地域連携設定を開始する。
     */
    @Override
    public void start() {
        initCustomComponents();
        connect();
        this.addressField.setText(GlobalVariables.getRsbAddress());

        this.chkShoken.setSelected(GlobalVariables.getOutputShoken());
        this.txtFolder.setText(GlobalVariables.getRsbFolder());
        this.chkAcsCtrl.setSelected(GlobalVariables.getRsbAcsCtrl());
        this.txtUserName.setText(GlobalVariables.getRsbUserName());
        this.txtPassword.setText(GlobalVariables.getRsbPassword());
    }

    private void initCustomComponents() {
    }

    private void connect() {
    }

    /**
     * 設定情報を保存する。
     */
    @Override
    public void save() {
        address = addressField.getText();
        GlobalVariables.setRsbAddress(this.address);

        GlobalVariables.setOutputShoken(this.chkShoken.isSelected());
        this.folder = this.txtFolder.getText();
        GlobalVariables.setRsbFolder(this.folder);

        GlobalVariables.setRsbAcsCtrl(this.chkAcsCtrl.isSelected());
        this.username = this.txtUserName.getText();
        GlobalVariables.setRsbUserName(this.username);
        this.password = this.txtPassword.getText();
        GlobalVariables.setRsbPassword(this.password);
    }

    /**
     * @param state The state to set.
     */
    @Override
    public void setState(State state) {
        this.state = state;
        boundSupport.firePropertyChange(STATE_PROP, null, this.state);
    }

    /**
     * @return Returns the state.
     */
    @Override
    public State getState() {
        return state;
    }

    @Override
    public void addPropertyChangeListener(String prop, PropertyChangeListener l) {
        boundSupport.addPropertyChangeListener(prop, l);
    }

    @Override
    public void removePropertyChangeListener(String prop, PropertyChangeListener l) {
        boundSupport.removePropertyChangeListener(prop, l);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JCheckBox chkAcsCtrl;
    private javax.swing.JCheckBox chkShoken;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFileOutput;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPanel panelAuth;
    private javax.swing.JTextField txtFolder;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * @param adptr
     */
    public void onChenge(Adapter<Boolean, Boolean> adptr) {
      this.adapter = adapter;
    }
}
